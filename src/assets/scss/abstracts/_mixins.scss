@use "./variables" as *;
@use "./breakpoints" as *;

//Layout
@mixin flex-column {
	display: flex;
	flex-direction: column;
	justify-content: center;
}
@mixin flex-center {
	display: flex;
	justify-content: center;
	align-items: center;
}
@mixin flex-center-column {
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}
@mixin flex-space-between {
	display: flex;
	justify-content: space-between;
	align-items: center;
}
@mixin flex-space-around {
	display: flex;
	justify-content: space-around;
	align-items: center;
}

@mixin absolute-center {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate3d(-50%, -50%, 0);
	width: 100%;
	height: 100%;
}

@mixin fixed-center {
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate3d(-50%, -50%, 0);
	width: 100%;
	height: 100%;
}

@mixin border-layout {
	& > * {
		border-bottom: 1px solid $grey;
		width: 100%;
		padding-bottom: $space-xs;
		position: relative;

		&:not(:last-child) {
			margin-right: 0.5rem;
			position: relative;
			&:after {
				content: "";
				position: absolute;
				top: 0;
				right: -0.28rem;
				border-right: 1px solid $grey;
				height: 20px;

				@include desktop {
					height: 30px;
				}
			}
		}

		&:last-child {
			text-align: right;
		}
	}
}

//Buttons
@mixin primary-button {
	background: $black;
	color: $white;
	height: 48px;
	padding: 0px 20px;
	border-radius: 100px;
	transition: all 0.5s;
	cursor: pointer;
}

@mixin disabled-button {
	@include primary-button;
	opacity: 0.2;
	cursor: not-allowed;
}

// Typography
@mixin fluid-typography($minFont, $maxFont, $minBreakpoint, $maxBreakpoint) {
	/* Define variable for media query */
	$maxLessOne: $maxBreakpoint - 1;

	/* Define variable for fallback */
	$avg: ($maxFont + $minFont) / 2;

	/* Base font size */
	font-size: #{$minFont}px;

	@media (min-width: #{$minBreakpoint}px) and (max-width: #{$maxLessOne}px) {
		/* Adds a fallback for unsupported browsers */
		font-size: #{$avg}px;

		/* The fluid typography magic ðŸŒŸ  */
		font-size: calc(
			#{$minFont}px + (#{$maxFont} - #{$minFont}) *
				(100vw - #{$minBreakpoint}px) /
				(#{$maxBreakpoint} - #{$minBreakpoint})
		);
	}

	@media (min-width: #{$maxBreakpoint}px) {
		font-size: #{$maxFont}px;
	}
}
